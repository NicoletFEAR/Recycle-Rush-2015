// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package com.nicoletfear.Robot2015.subsystems;

import com.nicoletfear.Robot2015.Robot;
import com.nicoletfear.Robot2015.RobotMap;
import com.nicoletfear.Robot2015.Subsystems;
import com.nicoletfear.Robot2015.commands.*;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class dog extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    DigitalInput limitSwitchTopRight = RobotMap.dogLimitSwitchTopRight;
    DigitalInput limitSwitchBottomRight = RobotMap.dogLimitSwitchBottomRight;
    DigitalInput limitSwitchTopLeft = RobotMap.dogLimitSwitchTopLeft;
    DigitalInput limitSwitchBottomLeft = RobotMap.dogLimitSwitchBottomLeft;
    
    //public static SpeedController dogMotor = new CANTalon(Subsystems.rioCheck.getPortNumber(RobotMap.TalonPortDog));
    //remove above
    //public static SpeedController dogMotorRight = new CANTalon(Subsystems.rioCheck.getPortNumber(RobotMap.TalonPortDogRight));
    //public static SpeedController dogMotorLeft = new CANTalon(Subsystems.rioCheck.getPortNumber(RobotMap.TalonPortDogLeft));
    // SpeedController motor = dogMotor;
    CANTalon dogMotorRight = new CANTalon(RobotMap.TalonIDDogRight);
    CANTalon dogMotorLeft = new CANTalon(RobotMap.TalonIDDogLeft);
    public final double MAXGAMEMECH = 1.0;
    
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    /*
    public void startMotorTestRight(){
    	//dogMotor.set(0.5);
    	dogMotorRight.set(0.1);
    }
    
    public void startMotorTestLeft(){
    	//dogMotor.set(0.5);
    	dogMotorLeft.set(0.1);
    }*/
    
    public void stopMotorTestRight(){
    	//dogMotor.set(0);
    	dogMotorRight.set(0);
    }
    
    public void stopMotorTestLeft(){
    	dogMotorLeft.set(0);
    }
    
    public void upMotorTestRight(){
    	//dogMotor.set(-0.5);
    	dogMotorRight.set(MAXGAMEMECH);
    }
    
    public void downMotorTestRight(){
    	//dogMotor.set(0.5);
    	dogMotorRight.set(-MAXGAMEMECH);
    }
    
    public void upMotorTestLeft(){
    	//dogMotor.set(-0.5);
    	dogMotorLeft.set(-MAXGAMEMECH);
    }
    
    public void downMotorTestLeft(){
    	//dogMotor.set(0.5);
    	dogMotorLeft.set(MAXGAMEMECH);
    }
    
    public boolean upLimitPressedRight(){
    	if(RobotMap.dogLimitSwitchTopRight.get())
    	{
    		return false;
    	}
    	else{
		return true;
    	}
    }
    
    public boolean downLimitPressedRight(){
    	return !RobotMap.dogLimitSwitchBottomRight.get();
    }
    
    public boolean upLimitPressedLeft(){
    	if(RobotMap.dogLimitSwitchTopLeft.get())
    	{
    		return false;
    	}
    	else{
		return true;
    	}
    }
    
    public boolean downLimitPressedLeft(){
    	return !RobotMap.dogLimitSwitchBottomLeft.get();
    }
}

